{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/models/Recipe.ts","webpack:///./src/app/recipe-form/recipe-form.component.html","webpack:///./src/app/recipe-form/recipe-form.component.scss","webpack:///./src/app/recipe-form/recipe-form.component.ts","webpack:///./src/app/recipe-list/recipe-list.component.html","webpack:///./src/app/recipe-list/recipe-list.component.scss","webpack:///./src/app/recipe-list/recipe-list.component.ts","webpack:///./src/app/services/recipe.service.ts","webpack:///./src/app/single-recipe/single-recipe.component.html","webpack:///./src/app/single-recipe/single-recipe.component.scss","webpack:///./src/app/single-recipe/single-recipe.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { RecipeListComponent } from './recipe-list/recipe-list.component';\nimport { SingleRecipeComponent } from './single-recipe/single-recipe.component';\nimport { RecipeFormComponent } from './recipe-form/recipe-form.component';\n\nconst appRoutes: Routes = [\n  { path: 'recipe/:id', component: SingleRecipeComponent },\n  { path: 'new-recipe', component: RecipeFormComponent },\n  { path: 'recipe/edit/:id', component: RecipeFormComponent },\n  { path: '', component: RecipeListComponent },\n  { path: '**', redirectTo: '' }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(appRoutes)\n  ],\n  exports: [\n    RouterModule\n  ]\n})\nexport class AppRoutingModule {}\n","module.exports = \"<mat-toolbar color=\\\"primary\\\" class=\\\"mat-elevation-z4\\\">\\n  <span>My-Yums.com - the #1 recipe app</span>\\n  <span class=\\\"fill-remaining-space\\\"></span>\\n  <a class=\\\"header-link\\\" routerLink=\\\"new-recipe\\\">New Recipe</a>\\n  <a class=\\\"header-link\\\" routerLink=\\\"/\\\">Recipe List</a>\\n</mat-toolbar>\\n<router-outlet></router-outlet>\\n\"","module.exports = \".fill-remaining-space {\\n  flex: 1 1 auto; }\\n\\n.header-link {\\n  color: white;\\n  text-decoration: none;\\n  margin: 0 1em; }\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { RecipeListComponent } from './recipe-list/recipe-list.component';\nimport { SingleRecipeComponent } from './single-recipe/single-recipe.component';\nimport { RecipeFormComponent } from './recipe-form/recipe-form.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport {\n  MatButtonModule,\n  MatCardModule, MatDialogModule,\n  MatExpansionModule,\n  MatFormFieldModule,\n  MatInputModule,\n  MatProgressSpinnerModule,\n  MatToolbarModule\n} from '@angular/material';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    RecipeListComponent,\n    SingleRecipeComponent,\n    RecipeFormComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    MatToolbarModule,\n    MatCardModule,\n    MatProgressSpinnerModule,\n    MatExpansionModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule,\n    MatDialogModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export class Recipe {\n  title: string;\n  ingredients: string;\n  instructions: string;\n  difficulty: number;\n  time: number;\n  _id: string;\n}\n","module.exports = \"<mat-spinner *ngIf=\\\"loading\\\"></mat-spinner>\\n<mat-card *ngIf=\\\"!loading\\\">\\n  <h1 class=\\\"mat-display-1\\\" *ngIf=\\\"mode === 'new'\\\">New Recipe</h1>\\n  <h1 class=\\\"mat-display-1\\\" *ngIf=\\\"mode === 'modify'\\\">Modify Recipe</h1>\\n  <form [formGroup]=\\\"recipeForm\\\">\\n    <mat-form-field>\\n      <input matInput type=\\\"text\\\" placeholder=\\\"Title\\\" formControlName=\\\"title\\\">\\n    </mat-form-field>\\n    <mat-form-field>\\n      <textarea matInput placeholder=\\\"Ingredients\\\" rows=\\\"6\\\" formControlName=\\\"ingredients\\\"></textarea>\\n    </mat-form-field>\\n    <mat-form-field>\\n      <textarea matInput placeholder=\\\"Instructions\\\" rows=\\\"6\\\" formControlName=\\\"instructions\\\"></textarea>\\n    </mat-form-field>\\n    <mat-form-field>\\n      <input matInput placeholder=\\\"Time to prepare (minutes)\\\" type=\\\"number\\\" min=\\\"0\\\" formControlName=\\\"time\\\">\\n    </mat-form-field>\\n    <mat-form-field>\\n      <input matInput placeholder=\\\"Difficulty (1-5)\\\" type=\\\"number\\\" min=\\\"0\\\" max=\\\"5\\\" formControlName=\\\"difficulty\\\">\\n    </mat-form-field>\\n    <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"recipeForm.invalid\\\" (click)=\\\"onSubmit()\\\">Submit</button>\\n    <p>{{ errorMessage }}</p>\\n  </form>\\n</mat-card>\\n\"","module.exports = \"mat-card {\\n  width: 70%;\\n  margin: auto; }\\n\\nmat-form-field {\\n  display: block;\\n  width: 80%; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { RecipeService } from '../services/recipe.service';\nimport { Recipe } from '../models/Recipe';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-recipe-form',\n  templateUrl: './recipe-form.component.html',\n  styleUrls: ['./recipe-form.component.scss']\n})\nexport class RecipeFormComponent implements OnInit {\n  id: string;\n  mode: string;\n  recipe: Recipe;\n  recipeForm: FormGroup;\n  errorMessage: string;\n  loading: boolean;\n\n  constructor(private route: ActivatedRoute,\n              private recipeService: RecipeService,\n              private formBuilder: FormBuilder,\n              private router: Router) { }\n\n  ngOnInit() {\n    this.loading = true;\n    if (this.route.snapshot.url[0].path === 'new-recipe') {\n      this.mode = 'new';\n      this.recipeForm = this.formBuilder.group({\n        title: [null, Validators.required],\n        ingredients: [null, Validators.required],\n        instructions: [null, Validators.required],\n        difficulty: [null, [Validators.required, Validators.max(5)]],\n        time: [null, Validators.required]\n      });\n      this.loading = false;\n    } else {\n      this.loading = true;\n      this.mode = 'modify';\n      this.route.params.subscribe(\n        (params) => {\n          this.id = params.id;\n          this.recipeService.getSingleRecipe(this.id).subscribe(\n            (recipe: Recipe) => {\n              this.recipe = recipe;\n              this.recipeForm = this.formBuilder.group({\n                title: [recipe.title, Validators.required],\n                ingredients: [recipe.ingredients, Validators.required],\n                instructions: [recipe.instructions, Validators.required],\n                difficulty: [recipe.difficulty, Validators.required],\n                time: [recipe.time, Validators.required]\n              });\n              this.loading = false;\n            }\n          );\n        }\n      );\n    }\n  }\n\n  onSubmit() {\n    this.loading = true;\n    this.errorMessage = null;\n    const newRecipe = new Recipe();\n    newRecipe.title = this.recipeForm.get('title').value;\n    newRecipe.instructions = this.recipeForm.get('instructions').value;\n    newRecipe.ingredients = this.recipeForm.get('ingredients').value;\n    newRecipe.time = this.recipeForm.get('time').value;\n    newRecipe.difficulty = this.recipeForm.get('difficulty').value;\n    if (this.mode === 'new') {\n      this.recipeService.saveRecipe(newRecipe).subscribe(\n        () => {\n          this.router.navigate(['/']);\n        },\n        (error) => {\n          this.loading = false;\n          this.errorMessage = error.message;\n        }\n      );\n    } else if (this.mode === 'modify') {\n      this.recipeService.modifyRecipe(this.recipe._id, newRecipe).subscribe(\n        () => {\n          this.router.navigate(['/']);\n        },\n        (error) => {\n          this.loading = false;\n          this.errorMessage = error.message;\n        }\n      );\n    }\n  }\n\n}\n","module.exports = \"<mat-spinner *ngIf=\\\"loading\\\"></mat-spinner>\\n<mat-card *ngIf=\\\"!loading\\\">\\n  <h1 mat-card-title>Recipes</h1>\\n  <mat-card-subtitle>All of your favourites!</mat-card-subtitle>\\n  <mat-card-content *ngIf=\\\"recipes.length <= 0\\\">\\n    <p>No recipes to show!</p>\\n  </mat-card-content>\\n  <mat-card-content *ngIf=\\\"recipes.length > 0\\\">\\n    <mat-expansion-panel *ngFor=\\\"let recipe of recipes\\\">\\n      <mat-expansion-panel-header>\\n        <mat-panel-title>\\n          <h3>{{ recipe.title }}</h3>\\n        </mat-panel-title>\\n      </mat-expansion-panel-header>\\n      <h3 class=\\\"mat-h3\\\">Time</h3>\\n      <p>{{ recipe.time }} minutes to prepare</p>\\n      <h3 class=\\\"mat-h3\\\">Difficulty</h3>\\n      <div [ngSwitch]=\\\"recipe.difficulty\\\" style=\\\"margin-bottom: 2em;\\\">\\n        <div *ngSwitchCase=\\\"1\\\">\\n          <span class=\\\"fa fa-burn\\\"></span>\\n        </div>\\n        <div *ngSwitchCase=\\\"2\\\">\\n          <span class=\\\"fa fa-burn\\\"></span>\\n          <span class=\\\"fa fa-burn\\\"></span>\\n        </div>\\n        <div *ngSwitchCase=\\\"3\\\">\\n          <span class=\\\"fa fa-burn\\\"></span>\\n          <span class=\\\"fa fa-burn\\\"></span>\\n          <span class=\\\"fa fa-burn\\\"></span>\\n        </div>\\n        <div *ngSwitchCase=\\\"4\\\">\\n          <span class=\\\"fa fa-burn\\\"></span>\\n          <span class=\\\"fa fa-burn\\\"></span>\\n          <span class=\\\"fa fa-burn\\\"></span>\\n          <span class=\\\"fa fa-burn\\\"></span>\\n        </div>\\n        <div *ngSwitchCase=\\\"5\\\">\\n          <span class=\\\"fa fa-burn\\\"></span>\\n          <span class=\\\"fa fa-burn\\\"></span>\\n          <span class=\\\"fa fa-burn\\\"></span>\\n          <span class=\\\"fa fa-burn\\\"></span>\\n          <span class=\\\"fa fa-burn\\\"></span>\\n        </div>\\n      </div>\\n      <button (click)=\\\"onOpenRecipe(recipe._id)\\\" mat-raised-button color=\\\"accent\\\">See recipe</button>\\n    </mat-expansion-panel>\\n  </mat-card-content>\\n</mat-card>\\n\"","module.exports = \"mat-card {\\n  width: 70%;\\n  margin: auto; }\\n\\nh3 {\\n  color: hotpink; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { RecipeService } from '../services/recipe.service';\nimport { Subscription } from 'rxjs';\nimport { Recipe } from '../models/Recipe';\nimport { map } from 'rxjs/operators';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-recipe-list',\n  templateUrl: './recipe-list.component.html',\n  styleUrls: ['./recipe-list.component.scss']\n})\nexport class RecipeListComponent implements OnInit {\n  recipes: Recipe[];\n  recipes$: Subscription;\n  loading: boolean;\n\n  constructor(private recipe: RecipeService,\n              private router: Router) { }\n\n  ngOnInit() {\n    this.loading = true;\n    this.recipes$ = this.recipe.recipes$.subscribe(\n      (recipes) => {\n        this.recipes = recipes;\n        this.loading = false;\n      }\n    );\n    this.recipe.getRecipes();\n  }\n\n  onOpenRecipe(id: string) {\n    this.router.navigate(['recipe', id]);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { Recipe } from '../models/Recipe';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RecipeService {\n  recipes$ = new BehaviorSubject<Recipe[]>([]);\n\n  constructor(private http: HttpClient) {}\n\n  getRecipes() {\n    this.http.get('http://localhost:3000/api/recipes').subscribe(\n      (recipes: Recipe[]) => {\n        this.recipes$.next(recipes);\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n  }\n\n  getSingleRecipe(id: string) {\n    return this.http.get('http://localhost:3000/api/recipes/' + id);\n  }\n\n  saveRecipe(recipe: Recipe) {\n    return this.http.post('http://localhost:3000/api/recipes', recipe);\n  }\n\n  modifyRecipe(id: string, recipe: Recipe) {\n    return this.http.put('http://localhost:3000/api/recipes/' + id, recipe);\n  }\n\n  deleteRecipe(id: string) {\n    return this.http.delete('http://localhost:3000/api/recipes/' + id);\n  }\n}\n","module.exports = \"<mat-spinner *ngIf=\\\"loading\\\"></mat-spinner>\\n<mat-card *ngIf=\\\"!loading\\\">\\n  <mat-card-header><h1 class=\\\"mat-h1\\\">{{ recipe?.title }}</h1></mat-card-header>\\n  <mat-card-content>\\n    <p>Time to cook: {{ recipe?.time }} minutes</p>\\n    <h3 class=\\\"mat-h3\\\">Ingredients</h3>\\n    <p>{{ recipe?.ingredients }}</p>\\n    <h3 class=\\\"mat-h3\\\">Instructions</h3>\\n    <p>{{ recipe?.instructions }}</p>\\n    <h3 class=\\\"mat-h3\\\">Difficulty</h3>\\n    <div [ngSwitch]=\\\"recipe?.difficulty\\\" style=\\\"margin-bottom: 2em;\\\">\\n      <div *ngSwitchCase=\\\"1\\\">\\n        <span class=\\\"fa fa-burn\\\"></span>\\n      </div>\\n      <div *ngSwitchCase=\\\"2\\\">\\n        <span class=\\\"fa fa-burn\\\"></span>\\n        <span class=\\\"fa fa-burn\\\"></span>\\n      </div>\\n      <div *ngSwitchCase=\\\"3\\\">\\n        <span class=\\\"fa fa-burn\\\"></span>\\n        <span class=\\\"fa fa-burn\\\"></span>\\n        <span class=\\\"fa fa-burn\\\"></span>\\n      </div>\\n      <div *ngSwitchCase=\\\"4\\\">\\n        <span class=\\\"fa fa-burn\\\"></span>\\n        <span class=\\\"fa fa-burn\\\"></span>\\n        <span class=\\\"fa fa-burn\\\"></span>\\n        <span class=\\\"fa fa-burn\\\"></span>\\n      </div>\\n      <div *ngSwitchCase=\\\"5\\\">\\n        <span class=\\\"fa fa-burn\\\"></span>\\n        <span class=\\\"fa fa-burn\\\"></span>\\n        <span class=\\\"fa fa-burn\\\"></span>\\n        <span class=\\\"fa fa-burn\\\"></span>\\n        <span class=\\\"fa fa-burn\\\"></span>\\n      </div>\\n    </div>\\n    <button mat-raised-button color=\\\"primary\\\" (click)=\\\"onModify()\\\">Modify</button>\\n    <button mat-raised-button color=\\\"warn\\\" (click)=\\\"onDelete()\\\">Delete</button>\\n    <p>{{ errorMessage }}</p>\\n  </mat-card-content>\\n</mat-card>\\n\"","module.exports = \"mat-card {\\n  width: 70%;\\n  margin: auto; }\\n\\nh3 {\\n  color: hotpink; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Recipe } from '../models/Recipe';\nimport { RecipeService } from '../services/recipe.service';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-single-recipe',\n  templateUrl: './single-recipe.component.html',\n  styleUrls: ['./single-recipe.component.scss']\n})\nexport class SingleRecipeComponent implements OnInit {\n  loading: boolean;\n  recipe: Recipe;\n  errorMessage: string;\n\n  constructor(private recipeService: RecipeService,\n              private route: ActivatedRoute,\n              private router: Router) { }\n\n  ngOnInit() {\n    this.route.params.subscribe(\n      (params) => {\n        this.recipeService.getSingleRecipe(params.id).subscribe(\n          (recipe: Recipe) => {\n            this.recipe = recipe;\n          }\n        );\n      }\n    );\n  }\n\n  onModify() {\n    this.router.navigate(['/recipe', 'edit', this.recipe._id]);\n  }\n\n  onDelete() {\n    this.loading = true;\n    this.recipeService.deleteRecipe(this.recipe._id).subscribe(\n      () => {\n        this.loading = false;\n        this.router.navigate(['/']);\n      },\n      (error) => {\n        this.loading = false;\n        this.errorMessage = error.message;\n      }\n    );\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}